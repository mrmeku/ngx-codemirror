var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.576,1,0.726]],["body/components/AppComponent.html",[0,0.92,1,1.094,2,0.592,3,0.592,4,1.408,5,1.408,6,0.363,7,1.408,8,2.029,9,3.115,10,1.408,11,2.071,12,1.893,13,2.029,14,1.615,15,0.592,16,1.615,17,2.063,18,2.071,19,1.849,20,1.615,21,2.602,22,3.409,23,1.615,24,1.408,25,0.671,26,3.115,27,3.409,28,1.775,29,2.658,30,1.408,31,0.084,32,2.195,33,1.241,34,1.121,35,1.615,36,1.845,37,1.615,38,2.029,39,1.845,40,1.306,41,0.906,42,3.115,43,2.658,44,2.658,45,1.358,46,2.658,47,2.658,48,1.615,49,1.845,50,0.711,51,0.47,52,2.658,53,1.408,54,1.408,55,0.386,56,1.408,57,1.845,58,1.845,59,0.363,60,0.182,61,1.615,62,1.845,63,1.845,64,1.845,65,1.845,66,1.845,67,1.408,68,1.845,69,1.408,70,1.845,71,1.845,72,1.408,73,1.121,74,1.408,75,1.845,76,1.845,77,1.408,78,1.845,79,3.115,80,1.845,81,3.613,82,1.845,83,1.845,84,2.658,85,0.906,86,1.121,87,2.658,88,2.658,89,1.845,90,0.735,91,2.029,92,1.615,93,2.029,94,2.602,95,1.408,96,1.408,97,0.592,98,1.408,99,1.408,100,0.048,101,0.048]],["title/modules/AppModule.html",[102,0.445,103,0.901]],["body/modules/AppModule.html",[1,1.423,2,0.818,3,0.818,6,0.502,31,0.084,50,0.853,51,0.649,53,1.946,54,1.946,55,0.37,59,0.653,60,0.252,90,1.016,100,0.06,101,0.06,102,0.653,103,1.727,104,1.016,105,2.242,106,2.242,107,1.63,108,1.946,109,1.946,110,1.946,111,1.946,112,1.333,113,2.016,114,1.549,115,1.549,116,2.549,117,3.318,118,3.318,119,1.549,120,2.016,121,3.318,122,2.549,123,3.318,124,3.318,125,1.946,126,2.549]],["title/classes/AppPage.html",[60,0.224,127,1.375]],["body/classes/AppPage.html",[2,0.979,3,0.979,6,0.6,13,2.329,15,0.979,20,2.258,28,1.825,31,0.082,37,2.534,50,0.6,59,0.6,60,0.368,92,1.854,100,0.067,101,0.067,119,1.854,127,2.258,128,2.329,129,4.17,130,4.17,131,3.051,132,3.051,133,3.051,134,3.051,135,3.051,136,3.051]],["title/components/CodemirrorComponent.html",[0,0.576,97,0.726]],["body/components/CodemirrorComponent.html",[0,0.87,1,0.287,2,0.287,3,0.287,4,0.683,5,0.683,6,0.176,8,2.724,10,0.683,11,1.551,12,0.544,14,0.915,15,0.287,16,0.915,17,2.057,18,1.787,19,1.753,20,0.915,23,1.39,24,0.683,25,0.45,28,1.937,30,2.357,31,0.084,32,2.074,33,1.47,34,1.876,35,0.915,37,2.074,38,2.535,40,0.74,41,0.44,45,0.6,50,0.544,51,0.228,55,0.581,59,0.176,60,0.089,61,2.074,67,0.683,73,1.551,74,1.15,85,1.124,90,0.356,91,1.489,92,1.39,93,1.15,94,1.746,95,0.683,96,0.683,97,0.819,98,1.489,99,0.683,100,0.027,101,0.027,107,0.958,125,0.683,137,1.583,138,0.544,139,1.15,140,1.506,141,1.95,142,1.95,143,2.287,144,2.287,145,2.765,146,1.506,147,2.287,148,2.287,149,1.506,150,2.287,151,1.506,152,1.506,153,1.506,154,1.506,155,2.552,156,3.691,157,2.552,158,2.245,159,2.552,160,2.552,161,2.287,162,2.765,163,1.506,164,0.6,165,1.746,166,1.15,167,0.895,168,0.895,169,2.552,170,1.506,171,2.984,172,3.088,173,3.088,174,3.213,175,0.895,176,0.895,177,0.895,178,0.895,179,1.506,180,0.895,181,0.895,182,1.506,183,1.506,184,0.895,185,1.506,186,1.506,187,0.895,188,2.287,189,0.895,190,0.895,191,1.506,192,1.506,193,0.895,194,1.506,195,2.287,196,1.506,197,0.895,198,1.506,199,1.506,200,0.895,201,1.506,202,1.506,203,1.506,204,0.895,205,1.506,206,0.895,207,1.185,208,1.506,209,1.506,210,2.287,211,0.895,212,1.506,213,0.895,214,1.506,215,0.895,216,0.895,217,0.895,218,0.895,219,1.95,220,1.506,221,1.506,222,0.683,223,0.683,224,0.683,225,0.44,226,0.544,227,0.544,228,0.544,229,0.544,230,0.544,231,0.44,232,0.44,233,1.489,234,1.489,235,0.683,236,0.683,237,0.915,238,0.544,239,1.185,240,0.544,241,0.544,242,0.895,243,0.895,244,0.895,245,0.895,246,0.895,247,0.895,248,0.895,249,0.895,250,0.895,251,2.287,252,0.683,253,0.895,254,0.895,255,1.506,256,0.895,257,1.506,258,0.895,259,1.506,260,1.506,261,0.895,262,0.895,263,0.895,264,0.895,265,0.895,266,0.895,267,0.895,268,0.895,269,0.895,270,0.895,271,0.895,272,0.895]],["title/modules/CodemirrorModule.html",[102,0.445,112,0.726]],["body/modules/CodemirrorModule.html",[2,0.766,3,0.766,6,0.469,25,0.802,31,0.085,45,1.579,50,0.702,51,0.607,55,0.346,59,0.749,60,0.236,90,0.95,97,1.436,100,0.058,101,0.058,102,0.702,104,0.95,105,2.169,106,1.449,107,1.754,112,1.374,113,1.93,114,1.449,115,1.449,120,1.93,137,0.95,224,1.821,273,1.821,274,1.821,275,1.821,276,1.821,277,1.821,278,2.385,279,3.176,280,2.385,281,1.821,282,1.821,283,2.385,284,1.821,285,2.385]],["title/injectables/CodemirrorService.html",[25,0.445,164,0.901]],["body/injectables/CodemirrorService.html",[2,0.752,3,0.752,6,0.461,15,0.752,16,1.908,17,1.739,19,1.152,25,0.618,28,1.152,31,0.084,32,1.424,33,0.934,41,1.152,50,0.744,51,0.597,55,0.573,59,0.461,60,0.232,72,2.886,73,2.618,85,1.542,100,0.057,101,0.057,137,1.251,139,1.79,164,1.41,165,2.886,171,2.397,207,1.424,222,3.097,223,1.79,225,1.152,226,1.424,227,1.424,228,1.424,229,1.424,230,1.424,231,1.152,232,1.152,233,1.79,234,1.79,235,1.79,236,1.79,237,1.908,238,1.424,239,2.151,240,1.424,241,1.424,286,1.424,287,3.139,288,3.139,289,3.139,290,2.397,291,3.139,292,2.397,293,2.344,294,3.139,295,3.139,296,3.139,297,3.139,298,3.139,299,3.139]],["title/coverage.html",[300,1.862]],["body/coverage.html",[0,0.9,1,0.902,6,0.553,7,2.146,25,0.553,31,0.082,33,1.119,55,0.513,60,0.278,77,3.253,85,1.381,86,1.708,97,0.902,100,0.064,101,0.064,127,1.708,128,2.146,137,1.614,138,2.146,164,1.119,286,2.146,300,1.708,301,2.81,302,2.81,303,2.81,304,2.81,305,2.146,306,2.589,307,2.696,308,4.051,309,2.146,310,4.051,311,2.81,312,3.532,313,2.81,314,2.696,315,2.146,316,2.146,317,2.81,318,2.146]],["title/dependencies.html",[104,1.081,319,1.451]],["body/dependencies.html",[31,0.08,51,0.874,55,0.499,100,0.072,101,0.072,104,1.367,320,3.433,321,3.986,322,3.433,323,3.433]],["title/index.html",[15,0.61,324,1.9,325,1.9]],["body/index.html",[0,0.632,6,0.488,11,1.021,12,1.021,14,1.021,17,1.22,18,1.021,21,1.283,23,1.021,25,0.488,31,0.082,34,1.021,35,1.021,40,0.825,48,1.021,50,0.717,51,0.428,55,0.605,56,1.283,59,0.488,60,0.292,61,1.021,69,1.283,86,1.794,100,0.045,101,0.045,102,0.331,103,0.669,112,0.948,120,1.021,158,1.283,166,1.283,207,1.021,225,0.825,231,0.825,232,0.825,252,1.895,281,2.49,282,1.283,284,1.283,290,2.254,292,1.283,300,1.021,318,1.283,319,2.254,326,3.867,327,1.68,328,1.68,329,1.68,330,2.483,331,1.68,332,1.68,333,1.68,334,2.483,335,1.283,336,1.68,337,3.867,338,1.68,339,1.68,340,1.68,341,1.68,342,1.68,343,1.68,344,1.895,345,3.767,346,3.261,347,2.483,348,2.483,349,3.642,350,2.483,351,2.483,352,3.479,353,1.68,354,3.479,355,2.483,356,2.483,357,3.261,358,2.483,359,3.479,360,2.483,361,2.483,362,2.483,363,2.952,364,2.952,365,2.483,366,2.483,367,1.68,368,3.767,369,1.68,370,1.68,371,2.952,372,1.68,373,1.68,374,1.68,375,1.68,376,1.68,377,2.483,378,2.483,379,1.68,380,1.68,381,1.68,382,1.68,383,3.767,384,1.68,385,1.68,386,1.68,387,1.68,388,1.68,389,1.68,390,1.68,391,1.68,392,1.68,393,1.68,394,1.68,395,1.68,396,1.68,397,1.68,398,1.68,399,1.68,400,1.68,401,1.68,402,1.68,403,1.68,404,1.68,405,1.68,406,1.68,407,1.68,408,1.68,409,2.952,410,2.952,411,1.68,412,1.68,413,1.68,414,1.68,415,1.68,416,1.68,417,1.68,418,1.68,419,1.68,420,1.68,421,1.68,422,1.68,423,2.483,424,2.483,425,1.68,426,1.68,427,1.68,428,1.68,429,1.68,430,1.68,431,1.68,432,1.68,433,1.68,434,1.68,435,1.68,436,1.68]],["title/modules.html",[102,0.603]],["body/modules.html",[31,0.072,100,0.072,101,0.072,102,0.675,103,1.367,112,1.102,119,2.422,335,3.043,437,3.986,438,3.986]],["title/overview.html",[439,2.34]],["body/overview.html",[0,0.648,1,1.357,25,0.725,31,0.085,45,1.612,48,2.013,59,0.5,60,0.251,90,1.013,97,1.391,100,0.06,101,0.06,102,0.652,103,1.684,104,1.013,105,1.545,106,1.545,107,1.249,108,1.941,109,1.941,110,1.941,111,1.941,112,1.376,113,2.013,114,1.545,115,1.545,164,1.013,273,1.941,274,1.941,275,1.941,276,1.941,277,1.941,344,2.529,439,1.941]],["title/miscellaneous/variables.html",[306,1.65,440,1.451]],["body/miscellaneous/variables.html",[15,0.793,19,1.97,31,0.083,33,1.598,40,1.896,41,1.97,45,1.295,50,0.64,55,0.619,100,0.059,101,0.059,137,1.295,138,1.501,225,1.597,226,1.975,227,1.975,228,1.975,229,1.975,230,1.975,231,1.597,232,1.597,237,2.346,238,1.975,239,2.502,240,1.975,241,1.975,286,1.501,305,1.886,306,1.501,307,3.144,309,1.886,314,1.886,315,2.774,316,2.774,440,1.886,441,2.471,442,2.471,443,3.251,444,2.471,445,2.471,446,2.471,447,2.471,448,3.251,449,2.471]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["0.5rem",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":344,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.x",{"_index":339,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"overview.html":{}}}],["2/2",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["2677d0",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":348,"title":{},"body":{"index.html":{}}}],["4",{"_index":350,"title":{},"body":{"index.html":{}}}],["5",{"_index":334,"title":{},"body":{"index.html":{}}}],["5.38.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["5.x",{"_index":282,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["6",{"_index":330,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":353,"title":{},"body":{"index.html":{}}}],["7.1",{"_index":355,"title":{},"body":{"index.html":{}}}],["7.2",{"_index":356,"title":{},"body":{"index.html":{}}}],["7.3",{"_index":358,"title":{},"body":{"index.html":{}}}],["7.4",{"_index":360,"title":{},"body":{"index.html":{}}}],["7.5",{"_index":362,"title":{},"body":{"index.html":{}}}],["8",{"_index":365,"title":{},"body":{"index.html":{}}}],["_",{"_index":189,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_codemirror",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["_http",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["_instanc",{"_index":143,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_valu",{"_index":144,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_zone",{"_index":161,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["a1c549",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["accessor",{"_index":215,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["actual_compon",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["add",{"_index":391,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":141,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["alreadi",{"_index":400,"title":{},"body":{"index.html":{}}}],["angular",{"_index":281,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["angular/common",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/CodemirrorComponent.html":{}}}],["angular/http",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/platform",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["anyth",{"_index":424,"title":{},"body":{"index.html":{}}}],["aot",{"_index":363,"title":{},"body":{"index.html":{}}}],["api",{"_index":375,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["app.compon",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":327,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":103,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":127,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["attach",{"_index":214,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["background",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":411,"title":{},"body":{"index.html":{}}}],["befor",{"_index":394,"title":{},"body":{"index.html":{}}}],["blur",{"_index":157,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["bootstrap",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["brows",{"_index":438,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"modules.html":{}}}],["browser.get",{"_index":134,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":351,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":387,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":430,"title":{},"body":{"index.html":{}}}],["cgot",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["chang",{"_index":158,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["ci",{"_index":399,"title":{},"body":{"index.html":{}}}],["class",{"_index":60,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cli",{"_index":422,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_codemirrormodul",{"_index":273,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_codemirrorcomponent_provid",{"_index":275,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_declar",{"_index":274,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_export",{"_index":276,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_provid",{"_index":277,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["code",{"_index":290,"title":{},"body":{"injectables/CodemirrorService.html":{},"index.html":{}}}],["codemirror",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["codemirror.compon",{"_index":280,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["codemirror.editor",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodemirrorService.html":{}}}],["codemirror.fromtextarea(this.host.nativeel",{"_index":263,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror.servic",{"_index":224,"title":{},"body":{"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{}}}],["codemirror.umd.j",{"_index":421,"title":{},"body":{"index.html":{}}}],["codemirror/bundles/@nomadreservations/ngx",{"_index":420,"title":{},"body":{"index.html":{}}}],["codemirror/codemirror.component.t",{"_index":138,"title":{},"body":{"components/CodemirrorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codemirror/codemirror.component.ts:102",{"_index":181,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:110",{"_index":200,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:119",{"_index":204,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:127",{"_index":187,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:129",{"_index":190,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:131",{"_index":193,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:133",{"_index":197,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:138",{"_index":180,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:53",{"_index":168,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:55",{"_index":176,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:57",{"_index":178,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:59",{"_index":175,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:61",{"_index":177,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:63",{"_index":213,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:66",{"_index":206,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:69",{"_index":163,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:82",{"_index":217,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:85",{"_index":170,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:95",{"_index":184,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.module.t",{"_index":278,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["codemirror/codemirror.service.t",{"_index":286,"title":{},"body":{"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codemirror/codemirror.service.ts:27",{"_index":293,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["codemirror/lib/codemirror.css",{"_index":414,"title":{},"body":{"index.html":{}}}],["codemirror/mode/gfm/gfm",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["codemirrorcompon",{"_index":97,"title":{"components/CodemirrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"coverage.html":{},"overview.html":{}}}],["codemirrorinit",{"_index":146,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirrorinit(config",{"_index":179,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirrormodul",{"_index":112,"title":{"modules/CodemirrorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["codemirrorservic",{"_index":25,"title":{"injectables/CodemirrorService.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["color",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":378,"title":{},"body":{"index.html":{}}}],["compat",{"_index":435,"title":{},"body":{"index.html":{}}}],["compil",{"_index":364,"title":{},"body":{"index.html":{}}}],["compliant",{"_index":329,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":405,"title":{},"body":{"index.html":{}}}],["compodoc7",{"_index":407,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["config",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["configur",{"_index":359,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`%c",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(editor.getdoc",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(editor.st",{"_index":415,"title":{},"body":{"index.html":{}}}],["console.log(this.valu",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":236,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["constructor(_codemirror",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["content",{"_index":343,"title":{},"body":{"index.html":{}}}],["context",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":205,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.registeronchang",{"_index":194,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.registerontouch",{"_index":198,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.valu",{"_index":169,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["coverag",{"_index":300,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["css",{"_index":412,"title":{},"body":{"index.html":{}}}],["current",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["cursoract",{"_index":159,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["declar",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["decor",{"_index":211,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["depend",{"_index":104,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deriv",{"_index":341,"title":{},"body":{"index.html":{}}}],["descript",{"_index":139,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["destroy",{"_index":185,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["detail",{"_index":167,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["details](http://codemirror.net/doc/manual.html#config",{"_index":248,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["determin",{"_index":229,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["dirty/touch",{"_index":191,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["docs:watch",{"_index":406,"title":{},"body":{"index.html":{}}}],["document",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["e2e/src/app.po.t",{"_index":128,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":132,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":131,"title":{},"body":{"classes/AppPage.html":{}}}],["editor",{"_index":207,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{}}}],["editor.getdoc().getmode().nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["element(by.css('app",{"_index":135,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":210,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["emit",{"_index":295,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["entri",{"_index":373,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":279,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["environ",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":171,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["eventemitt",{"_index":174,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["exist",{"_index":228,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"overview.html":{}}}],["fals",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":395,"title":{},"body":{"index.html":{}}}],["fn",{"_index":195,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["focu",{"_index":160,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["folder",{"_index":371,"title":{},"body":{"index.html":{}}}],["follow",{"_index":377,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":244,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["forwardref",{"_index":220,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["gener",{"_index":404,"title":{},"body":{"index.html":{}}}],["get",{"_index":324,"title":{"index.html":{}},"body":{}}],["getparagraphtext",{"_index":129,"title":{},"body":{"classes/AppPage.html":{}}}],["getvalu",{"_index":216,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["gfm",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["global",{"_index":432,"title":{},"body":{"index.html":{}}}],["h1')).gettext",{"_index":136,"title":{},"body":{"classes/AppPage.html":{}}}],["hold",{"_index":287,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["host",{"_index":145,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["http",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["http://codemirror.net/doc/manual.html#config",{"_index":416,"title":{},"body":{"index.html":{}}}],["httpmodul",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["identifi",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["import",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":410,"title":{},"body":{"index.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":431,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{}}}],["init",{"_index":183,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["initi",{"_index":165,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["inject",{"_index":164,"title":{"injectables/CodemirrorService.html":{}},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":155,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["insanti",{"_index":299,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["instal",{"_index":345,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["integr",{"_index":381,"title":{},"body":{"index.html":{}}}],["istanbul",{"_index":386,"title":{},"body":{"index.html":{}}}],["it'",{"_index":298,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["javascript",{"_index":428,"title":{},"body":{"index.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["lib/ngx",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["lib6",{"_index":403,"title":{},"body":{"index.html":{}}}],["librari",{"_index":354,"title":{},"body":{"index.html":{}}}],["libthen",{"_index":390,"title":{},"body":{"index.html":{}}}],["licens",{"_index":366,"title":{},"body":{"index.html":{}}}],["line:compon",{"_index":242,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["line:no",{"_index":243,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["line:vari",{"_index":235,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["linenumb",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["linewrap",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["load",{"_index":361,"title":{},"body":{"index.html":{}}}],["local",{"_index":388,"title":{},"body":{"index.html":{}}}],["locat",{"_index":413,"title":{},"body":{"index.html":{}}}],["look",{"_index":333,"title":{},"body":{"index.html":{}}}],["main",{"_index":225,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["map((r",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["match",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["mirror",{"_index":291,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["miscellan",{"_index":440,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":436,"title":{},"body":{"index.html":{}}}],["mode",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["modul",{"_index":102,"title":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":247,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["namespac",{"_index":434,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":130,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":409,"title":{},"body":{"index.html":{}}}],["new",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{}}}],["next",{"_index":234,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["ng2",{"_index":342,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":221,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngafterviewinit",{"_index":147,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":148,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngoninit",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngx",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["ngzone",{"_index":162,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["node_modules/@nomadreservations/ngx",{"_index":419,"title":{},"body":{"index.html":{}}}],["nomadreservations.ngxcodemirror",{"_index":433,"title":{},"body":{"index.html":{}}}],["nomadreservations/ngx",{"_index":326,"title":{},"body":{"index.html":{}}}],["note",{"_index":331,"title":{},"body":{"index.html":{}}}],["npm",{"_index":368,"title":{},"body":{"index.html":{}}}],["object",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onblur",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["onc",{"_index":297,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["onchang",{"_index":149,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["onchange(_",{"_index":186,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ondestroy",{"_index":142,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["oninit",{"_index":9,"title":{},"body":{"components/AppComponent.html":{}}}],["ontouch",{"_index":150,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["option",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["origin",{"_index":340,"title":{},"body":{"index.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["output",{"_index":156,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["overview",{"_index":439,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":389,"title":{},"body":{"index.html":{}}}],["packag",{"_index":319,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":376,"title":{},"body":{"index.html":{}}}],["pad",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":250,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["pass",{"_index":172,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["path]@nomadreservations/ngx",{"_index":392,"title":{},"body":{"index.html":{}}}],["peer",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["plain",{"_index":427,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":336,"title":{},"body":{"index.html":{}}}],["point",{"_index":374,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":289,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["privat",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["process",{"_index":202,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["product",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":346,"title":{},"body":{"index.html":{}}}],["properti",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["protractor",{"_index":133,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["public",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{}}}],["publish",{"_index":352,"title":{},"body":{"index.html":{}}}],["readi",{"_index":284,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["readm",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["ref",{"_index":245,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["referenc",{"_index":288,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["refrenc",{"_index":296,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["regist",{"_index":397,"title":{},"body":{"index.html":{}}}],["registeronchang",{"_index":151,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registeronchange(fn",{"_index":192,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registerontouch",{"_index":152,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registerontouched(fn",{"_index":196,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registri",{"_index":402,"title":{},"body":{"index.html":{}}}],["rendering(ssr",{"_index":328,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":222,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["report",{"_index":385,"title":{},"body":{"index.html":{}}}],["requir",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('codemirror",{"_index":241,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.text",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["respons",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["rollup",{"_index":425,"title":{},"body":{"index.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'nam",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["run",{"_index":379,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":223,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["rxjs/oper",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["sampl",{"_index":357,"title":{},"body":{"index.html":{}}}],["save2",{"_index":369,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":408,"title":{},"body":{"index.html":{}}}],["see",{"_index":166,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["server",{"_index":231,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":252,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["setvalue(v",{"_index":218,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["side",{"_index":232,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{}}}],["spec.bundle.j",{"_index":382,"title":{},"body":{"index.html":{}}}],["spec\\.t",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":370,"title":{},"body":{"index.html":{}}}],["src/.../codemirror.component.t",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../codemirror.service.t",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.t",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/ngx",{"_index":137,"title":{},"body":{"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/public_api.t",{"_index":372,"title":{},"body":{"index.html":{}}}],["src/test.t",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":283,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["start",{"_index":325,"title":{"index.html":{}},"body":{}}],["statement",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["storag",{"_index":209,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["string",{"_index":208,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["structur",{"_index":347,"title":{},"body":{"index.html":{}}}],["subject",{"_index":294,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["subscribe((readm",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":335,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":437,"title":{},"body":{"modules.html":{}}}],["system.config",{"_index":418,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":417,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":318,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["tabsiz",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["test",{"_index":349,"title":{},"body":{"index.html":{}}}],["testit",{"_index":384,"title":{},"body":{"index.html":{}}}],["this._codemirror.instance$.next(this._inst",{"_index":272,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._codemirror.instance$.subscribe((editor",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this._http.get('/assets/readme.md",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this._inst",{"_index":259,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('blur",{"_index":270,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('chang",{"_index":264,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('cursoract",{"_index":268,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('focu",{"_index":266,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.setvalue(this._valu",{"_index":260,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._valu",{"_index":251,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._zone.runoutsideangular",{"_index":262,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.blur.emit({inst",{"_index":271,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.change.emit(valu",{"_index":258,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.codemirrorinit(this.config",{"_index":256,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.config",{"_index":255,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.cursoractivity.emit({inst",{"_index":269,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.focus.emit({inst",{"_index":267,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.onchang",{"_index":261,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.onchange(v",{"_index":254,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.ontouch",{"_index":257,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.updatevalue(this._instance.getvalu",{"_index":265,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.valu",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["through",{"_index":173,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["time",{"_index":396,"title":{},"body":{"index.html":{}}}],["travi",{"_index":398,"title":{},"body":{"index.html":{}}}],["travis.yml",{"_index":401,"title":{},"body":{"index.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["trigger",{"_index":188,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":233,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":237,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["umd",{"_index":429,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":239,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":380,"title":{},"body":{"index.html":{}}}],["up",{"_index":423,"title":{},"body":{"index.html":{}}}],["updat",{"_index":201,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["updatevalu",{"_index":153,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["updatevalue(valu",{"_index":199,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["us",{"_index":337,"title":{},"body":{"index.html":{}}}],["usag",{"_index":140,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["useexist",{"_index":246,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["user",{"_index":292,"title":{},"body":{"injectables/CodemirrorService.html":{},"index.html":{}}}],["util",{"_index":226,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":219,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["valu",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":253,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["variabl",{"_index":306,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":338,"title":{},"body":{"index.html":{}}}],["version].tgz5",{"_index":393,"title":{},"body":{"index.html":{}}}],["via",{"_index":367,"title":{},"body":{"index.html":{}}}],["view",{"_index":182,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["viewchild",{"_index":212,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["viewchild('host",{"_index":249,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["we'r",{"_index":230,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["webpack",{"_index":426,"title":{},"body":{"index.html":{}}}],["window",{"_index":238,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["window'",{"_index":227,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["window.navig",{"_index":240,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":285,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["writevalu",{"_index":154,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["writevalue(valu",{"_index":203,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["yarn",{"_index":383,"title":{},"body":{"index.html":{}}}],["you'r",{"_index":332,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onBlur\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_codeMirror: CodemirrorService, _http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _codeMirror\n                                                  \n                                                        \n                                                                    CodemirrorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    mode: {\n      name: 'gfm'\n    },\n    lineNumbers: true,\n    lineWrapping: true,\n    tabSize: 2\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { CodemirrorService } from '../lib/ngx-codemirror';\n\nimport { map } from 'rxjs/operators';\nimport 'codemirror/mode/gfm/gfm';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  \n    \n  \n  `\n})\nexport class AppComponent implements OnInit {\n  public config = {\n    mode: {\n      name: 'gfm'\n    },\n    lineNumbers: true,\n    lineWrapping: true,\n    tabSize: 2\n  };\n  public value: any;\n\n  constructor(\n    private _codeMirror: CodemirrorService,\n    private _http: Http\n  ) { }\n\n  public ngOnInit() {\n    this._http.get('/assets/README.md')\n      .pipe(\n        map((res: Response) => res.text())\n      )\n      .subscribe((readme) => {\n        this.value = readme;\n      });\n\n    this._codeMirror.instance$.subscribe((editor) => {\n      console.log(\n        `%cGot CodeMirror.Editor instance, the current mode is ${editor.getDoc().getMode().name}`,\n        'padding: 0 0.5rem; background: #000; color: #a1c549'\n      );\n      console.log(editor.getDoc());\n    });\n  }\n\n  public onBlur() {\n    console.log(`%c--------------------- New Document Value --------------------`, 'background-color: #2677d0; color: #fff');\n    console.log(this.value);\n    console.log(`%c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$`, 'background-color: #2677d0; color: #fff');\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CodemirrorComponent', 'selector': 'ngx-codemirror'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nAppModule -->\n\nCodemirrorModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CodemirrorModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CodemirrorModule } from '../lib/ngx-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    FormsModule,\n    CodemirrorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodemirrorComponent.html":{"url":"components/CodemirrorComponent.html","title":"component - CodemirrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodemirrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-codemirror/codemirror.component.ts\n\n\n    \n        Description\n    \n    \n        CodeMirror component\nUsage :\n   \n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ngx-codemirror\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _instance\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Public\n                                host\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                codemirrorInit\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                updateValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                cursorActivity\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_codeMirror: CodemirrorService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-codemirror/codemirror.component.ts:69\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _codeMirror\n                                                  \n                                                        \n                                                                    CodemirrorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                NgZone injected for Initialization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Codemirror config object (see details) \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Implements ControlValueAccessor.value \n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:85\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                    \n                        blur output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        change output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cursorActivity\n                    \n                    \n                        cursorActivity output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                    \n                        focus output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:57\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            codemirrorInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codemirrorInit(config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Initialize codemirror\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            On component view init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            On component destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChange(_: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Change event trigger \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Dirty/touched event trigger \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor.registerOnChange \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor.registerOnTouched \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Value update process\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:119\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:66\n                            \n                        \n\n                \n                    \n                        Current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:69\n                            \n                        \n\n                \n                    \n                        Value storage \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:63\n                            \n                        \n\n                \n                    \n                        Host element for codemirror to attach to \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:82\n                                \n                            \n                    \n                        \n                                Implements ControlValueAccessor.value \n\n\n                        \n                    \n\n                \n                    \n                        setvalue(v: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:85\n                                \n                            \n                    \n                        \n                                Implements ControlValueAccessor.value \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  forwardRef,\n  AfterViewInit,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\n\nimport { Editor } from 'codemirror';\nimport { CodemirrorService } from './codemirror.service';\n\n/**\n * Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n */\n// tslint:disable-next-line:variable-name\nconst CodeMirror: any =\n  typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined;\n\n/**\n * CodeMirror component\n *\n * **Usage** :\n * ```html\n *   \n * ```\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-codemirror',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true\n    }\n  ],\n  template: '',\n})\nexport class CodemirrorComponent implements AfterViewInit, OnDestroy {\n\n  /** Codemirror config object (see [details](http://codemirror.net/doc/manual.html#config)) */\n  @Input() public config: any;\n  /** change output event, pass through from codemirror */\n  @Output() public change = new EventEmitter();\n  /** focus output event, pass through from codemirror */\n  @Output() public focus = new EventEmitter();\n  /** blur output event, pass through from codemirror */\n  @Output() public blur = new EventEmitter();\n  /** cursorActivity output event, pass through from codemirror */\n  @Output() public cursorActivity = new EventEmitter();\n  /** Host element for codemirror to attach to */\n  @ViewChild('host') public host: ElementRef;\n\n  /** Current editor instance */\n  private _instance: any;\n\n  /** Value storage */\n  private _value = '';\n\n  /**\n   * Constructor\n   *\n   * @param _zone NgZone injected for Initialization\n   */\n  constructor(\n    private _codeMirror: CodemirrorService,\n    private _zone: NgZone\n  ) {}\n\n  /** Implements ControlValueAccessor.value */\n  get value() { return this._value; }\n\n  /** Implements ControlValueAccessor.value */\n  @Input() set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  /**\n   * On component destroy\n   */\n  public ngOnDestroy() {\n\n  }\n\n  /**\n   * On component view init\n   */\n  public ngAfterViewInit() {\n    this.config = this.config || {};\n    this.codemirrorInit(this.config);\n  }\n\n  /**\n   * Value update process\n   */\n  public updateValue(value: any) {\n    this.value = value;\n    this.onTouched();\n    this.change.emit(value);\n  }\n\n  /**\n   * Implements ControlValueAccessor\n   */\n  public writeValue(value: any) {\n    this._value = value || '';\n    if (this._instance) {\n      this._instance.setValue(this._value);\n    }\n  }\n\n  /** Change event trigger */\n  public  onChange(_: any) {}\n  /** Dirty/touched event trigger */\n  public onTouched() {}\n  /** Implements ControlValueAccessor.registerOnChange */\n  public registerOnChange(fn: any) { this.onChange = fn; }\n  /** Implements ControlValueAccessor.registerOnTouched */\n  public registerOnTouched(fn: any) { this.onTouched = fn; }\n\n  /**\n   * Initialize codemirror\n   */\n  private codemirrorInit(config: any) {\n    if (CodeMirror) {\n      this._zone.runOutsideAngular(() => {\n        this._instance = CodeMirror.fromTextArea(this.host.nativeElement, config);\n        this._instance.setValue(this._value);\n      });\n\n      this._instance.on('change', () => {\n        this.updateValue(this._instance.getValue());\n      });\n\n      this._instance.on('focus', (instance: any, event: any) => {\n        this.focus.emit({instance, event});\n      });\n\n      this._instance.on('cursorActivity', (instance: any) => {\n        this.cursorActivity.emit({instance});\n      });\n\n      this._instance.on('blur', (instance: any, event: any) => {\n        this.blur.emit({instance, event});\n      });\n\n      this._codeMirror.instance$.next(this._instance);\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CodemirrorComponent', 'selector': 'ngx-codemirror'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodemirrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CodemirrorModule.html":{"url":"modules/CodemirrorModule.html","title":"module - CodemirrorModule","body":"\n                   \n\n\n\n\n  Modules\n  CodemirrorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CodemirrorModule\n\n\n\ncluster_CodemirrorModule_declarations\n\n\n\ncluster_CodemirrorModule_CodemirrorComponent_providers\n\n\n\ncluster_CodemirrorModule_exports\n\n\n\ncluster_CodemirrorModule_providers\n\n\n\n\nCodemirrorComponent\n\nCodemirrorComponent\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nCodemirrorModule -->\n\nCodemirrorComponent->CodemirrorModule\n\n\n\n\n\nCodemirrorComponent \n\nCodemirrorComponent \n\nCodemirrorComponent  -->\n\nCodemirrorModule->CodemirrorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->CodemirrorComponent -->\n\n{\n    : , : (() => ), : true\n}->CodemirrorComponent\n\n\n\n\n\nCodemirrorService\n\nCodemirrorService\n\nCodemirrorModule -->\n\nCodemirrorService->CodemirrorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-codemirror/codemirror.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodemirrorComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CodemirrorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CodemirrorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CodemirrorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { CodemirrorComponent } from './codemirror.component';\nimport { CodemirrorService } from './codemirror.service';\n\n/**\n * @angular 5.x+ SSR ready CodeMirror wrapping module.\n */\n@NgModule({\n  providers: [\n    CodemirrorService\n  ],\n  declarations: [CodemirrorComponent],\n  exports: [CodemirrorComponent],\n  entryComponents: [CodemirrorComponent]\n})\nexport class CodemirrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodemirrorService.html":{"url":"injectables/CodemirrorService.html","title":"injectable - CodemirrorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CodemirrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-codemirror/codemirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Initialize Event for CodeMirror.Editor instance\nHolds a referencable pointer to the code mirror instance for users.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                instance$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            instance$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance$:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.service.ts:27\n                            \n                        \n\n                \n                    \n                        Codemirror instance subject\nEmits a refrence to the initialized CodeMirror.Editor once it's insantiated.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Editor } from 'codemirror';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n */\n// tslint:disable-next-line:variable-name\nconst CodeMirror: any =\n  typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined;\n\n/**\n * Initialize Event for CodeMirror.Editor instance\n *\n * Holds a referencable pointer to the code mirror instance for users.\n */\n@Injectable()\nexport class CodemirrorService {\n  /**\n   * Codemirror instance subject\n   *\n   * Emits a refrence to the initialized CodeMirror.Editor once it's insantiated.\n   */\n  public instance$: ReplaySubject = new ReplaySubject();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.component.ts\n            \n            \n                component\n            \n            \n                CodemirrorComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.component.ts\n            \n            \n                variable\n            \n            \n                CodeMirror\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.service.ts\n            \n            \n                injectable\n            \n            \n                CodemirrorService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.service.ts\n            \n            \n                variable\n            \n            \n                CodeMirror\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0\n        \n            @angular/common : >=6.0.0\n        \n            codemirror : >=5.38.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nomadreservations/ngx-codemirror\n@nomadreservations/ngx-codemirror CodeMirror (5.x) code editor in your Angular application. Server Side Rendering(SSR) compliant and @angular 6+ Ready.\nNote: If you're looking for @angular 5 support please use version 1.0.x\nOriginally derived from ng2-codemirror\nTable of Contents:\n\n\n\n1. Installation\n2. Project structure\n3. Testing\n4. Building\n5. Publishing\n6. Documentation\n7. Using the library\n7.1. Installing\n7.2. Sample\n7.3. Configuration\n7.4. Loading\n7.5. AoT compilation\n\n\n8. License\n\n\n1. Installation\nTo use @nomadreservations/ngx-codemirror in your project install it via npm:\nnpm i @nomadreservations/ngx-codemirror --save2. Project structure\n\nLibrary:\nsrc folder for the classes\nsrc/lib/public_api.ts entry point for all public APIs of the package\npackage.json npm options\n\n\n\n3. Testing\nThe following command run unit & integration tests that are in the tests folder (you can change the folder in spec.bundle.js file):\nyarn testIt also reports coverage using Istanbul.\n4. Building\nThe following command:\nyarn buildTo test locally the npm package:\nyarn pack-libThen you can install it in an app to test it:\nyarn add [path]@nomadreservations/ngx-codemirror-[version].tgz5. Publishing\nBefore publishing the first time:\n\nyou can register your library on Travis CI: you have already configured .travis.yml file\nyou must have a user on the npm registry: Publishing npm packages\n\nyarn publish-lib6. Documentation\nTo generate the documentation, this project uses compodoc:\nyarn docs:watch\nyarn compodoc7. Using the library\n7.1. Installing\nnpm install @nomadreservations/ngx-codemirror --saveThen you need to include base CSS of codemirror located in codemirror/lib/codemirror.css\n7.2. Sample\nInclude CodemirrorModule in your main module :\nimport { CodemirrorModule } from '@nomadreservations/ngx-codemirror';\n\n@NgModule({\n  // ...\n  imports:      [\n    CodemirrorModule\n  ],\n  // ...\n})\nexport class AppModule { }import { Component } from '@angular/core';\nimport { CodemirrorService } from '@nomadreservations/ngx-codemirror';\n\n@Component({\n  selector: 'sample',\n  template: `\n    \n    \n  `\n})\nexport class Sample{\n\n  constructor(\n    private _codeMirror: CodemirrorService,\n  ) { }\n\n  public ngOnInit() {\n    this._codeMirror.instance$.subscribe((editor) => {\n      console.log(editor.state);\n    });\n  }\n}7.3. Configuration\n\nconfig : The configuration object for CodeMirror see http://codemirror.net/doc/manual.html#config\n\n7.4. Loading\nUsing SystemJS configuration\nSystem.config({\n    map: {\n        '@nomadreservations/ngx-codemirror': 'node_modules/@nomadreservations/ngx-codemirror/bundles/@nomadreservations/ngx-codemirror.umd.js'\n    }\n});Angular-CLI\nNo need to set up anything, just import it in your code.\nRollup or webpack\nNo need to set up anything, just import it in your code.\nPlain JavaScript\nInclude the umd bundle in your index.html:\nand use global nomadreservations.ngxCodemirror namespace.\n7.5. AoT compilation\nThe library is compatible with AoT compilation.\n8. License\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CodemirrorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CodemirrorModule\n\n\n\ncluster_CodemirrorModule_declarations\n\n\n\ncluster_CodemirrorModule_CodemirrorComponent_providers\n\n\n\ncluster_CodemirrorModule_exports\n\n\n\ncluster_CodemirrorModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nAppModule -->\n\nCodemirrorModule->AppModule\n\n\n\n\n\nCodemirrorComponent \n\nCodemirrorComponent \n\nCodemirrorComponent  -->\n\nCodemirrorModule->CodemirrorComponent \n\n\n\n\n\nCodemirrorComponent\n\nCodemirrorComponent\n\nCodemirrorModule -->\n\nCodemirrorComponent->CodemirrorModule\n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->CodemirrorComponent -->\n\n{\n    : , : (() => ), : true\n}->CodemirrorComponent\n\n\n\n\n\nCodemirrorService\n\nCodemirrorService\n\nCodemirrorModule -->\n\nCodemirrorService->CodemirrorModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodeMirror   (src/.../codemirror.component.ts)\n                        \n                        \n                            CodeMirror   (src/.../codemirror.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ngx-codemirror/codemirror.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CodeMirror\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CodeMirror:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined\n                        \n                    \n\n                \n                    \n                        Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n\n                    \n                \n\n            \n        \n\n    src/lib/ngx-codemirror/codemirror.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CodeMirror\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CodeMirror:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined\n                        \n                    \n\n                \n                    \n                        Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
