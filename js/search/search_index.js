var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.576,1,0.726]],["body/components/AppComponent.html",[0,0.878,1,1.036,2,0.528,3,0.528,4,1,5,1.256,6,1.256,7,0.324,8,1.256,9,1.866,10,2.916,11,1.256,12,1.961,13,1.772,14,1.866,15,2.444,16,2.444,17,0.528,18,1.485,19,2.141,20,0.525,21,1.961,22,3.614,23,1.838,24,1.485,25,2.444,26,2.464,27,3.227,28,1.485,29,1.256,30,0.635,31,2.916,32,3.227,33,1.888,34,2.444,35,1.866,36,0.084,37,2.336,38,1.286,39,1.485,40,1.485,41,2.444,42,1.645,43,1.772,44,2.226,45,1.645,46,1.645,47,1.201,48,1.432,49,2.916,50,3.614,51,2.444,52,1.286,53,2.444,54,2.444,55,1.485,56,1.645,57,1.866,58,1.645,59,1.645,60,0.679,61,0.419,62,2.444,63,1.256,64,1.256,65,1.256,66,1.645,67,1.645,68,0.324,69,0.163,70,1.485,71,1.645,72,1.645,73,1.645,74,1.645,75,1.645,76,1.256,77,1.645,78,1.256,79,2.444,80,0.808,81,1.645,82,1.645,83,1.256,84,1,85,1.256,86,1.645,87,1.645,88,1.256,89,1.645,90,2.916,91,1.645,92,3.449,93,1.645,94,1.645,95,1.645,96,2.444,97,1.645,98,2.444,99,2.226,100,1.645,101,2.444,102,0.808,103,1,104,2.444,105,2.444,106,1.645,107,2.444,108,2.444,109,0.655,110,1.866,111,1.485,112,1.866,113,2.464,114,1.256,115,1.256,116,0.528,117,1.256,118,1.256,119,0.044,120,0.044]],["title/modules/AppModule.html",[121,0.445,122,0.901]],["body/modules/AppModule.html",[1,1.425,2,0.829,3,0.829,7,0.508,20,0.375,36,0.084,60,0.855,61,0.657,63,1.971,64,1.971,68,0.658,69,0.255,109,1.028,119,0.061,120,0.061,121,0.658,122,1.731,123,1.028,124,2.255,125,2.255,126,1.643,127,1.971,128,1.971,129,1.971,130,1.971,131,1.338,132,2.033,133,1.569,134,1.569,135,2.581,136,3.345,137,3.345,138,1.569,139,2.033,140,3.345,141,2.581,142,3.345,143,3.345,144,1.971,145,2.581]],["title/classes/AppPage.html",[69,0.224,146,1.375]],["body/classes/AppPage.html",[2,0.986,3,0.986,7,0.604,14,2.345,17,0.986,24,2.267,33,1.833,36,0.083,43,2.54,60,0.604,68,0.604,69,0.369,111,1.867,119,0.068,120,0.068,138,1.867,146,2.267,147,2.345,148,4.18,149,4.18,150,3.072,151,3.072,152,3.072,153,3.072,154,3.072,155,3.072]],["title/components/CodemirrorComponent.html",[0,0.576,116,0.726]],["body/components/CodemirrorComponent.html",[0,0.879,1,0.296,2,0.296,3,0.296,4,0.94,5,0.705,6,0.705,7,0.182,9,2.75,11,0.705,12,1.578,13,0.561,17,0.296,18,0.94,19,2.066,20,0.585,21,1.813,23,1.77,24,0.94,28,1.418,29,0.705,30,0.459,33,1.949,35,2.389,36,0.084,37,2.097,38,1.483,39,1.902,40,0.94,43,2.097,44,2.564,47,0.76,48,0.454,52,0.616,57,1.18,60,0.553,61,0.235,68,0.182,69,0.091,70,2.097,76,0.705,80,0.98,84,1.578,85,1.18,102,1.146,109,0.368,110,1.523,111,1.418,112,1.18,113,1.781,114,0.705,115,0.705,116,0.834,117,1.523,118,0.705,119,0.028,120,0.028,126,0.98,144,0.705,156,1.592,157,0.561,158,1.18,159,1.546,160,1.995,161,1.995,162,2.333,163,2.333,164,2.81,165,1.546,166,2.333,167,2.333,168,1.546,169,2.333,170,1.546,171,1.546,172,1.546,173,1.546,174,2.598,175,3.722,176,2.598,177,2.278,178,2.598,179,2.598,180,2.333,181,2.81,182,1.546,183,0.616,184,1.781,185,1.18,186,0.923,187,0.923,188,2.598,189,1.546,190,3.004,191,3.129,192,3.129,193,3.253,194,0.923,195,0.923,196,0.923,197,0.923,198,1.546,199,0.923,200,0.923,201,1.546,202,1.546,203,0.923,204,1.546,205,1.546,206,0.923,207,2.333,208,0.923,209,0.923,210,1.546,211,1.546,212,0.923,213,1.546,214,2.333,215,1.546,216,0.923,217,1.546,218,1.546,219,0.923,220,1.546,221,1.546,222,1.546,223,0.923,224,1.546,225,0.923,226,1.546,227,2.333,228,0.923,229,1.546,230,0.923,231,1.546,232,0.923,233,0.923,234,0.923,235,0.923,236,1.995,237,1.546,238,1.546,239,0.705,240,0.705,241,0.705,242,0.454,243,0.561,244,0.561,245,0.561,246,0.561,247,0.561,248,0.454,249,0.454,250,1.523,251,1.523,252,0.705,253,0.705,254,0.94,255,0.561,256,1.212,257,0.561,258,0.561,259,0.923,260,0.923,261,0.923,262,0.923,263,0.923,264,0.923,265,0.923,266,0.923,267,0.923,268,2.333,269,0.705,270,0.923,271,0.923,272,1.546,273,0.923,274,1.546,275,0.923,276,1.546,277,1.546,278,0.923,279,0.923,280,0.923,281,0.923,282,0.923,283,0.923,284,0.923,285,0.923,286,0.923,287,0.923,288,0.923,289,0.923]],["title/modules/CodemirrorModule.html",[121,0.445,131,0.726]],["body/modules/CodemirrorModule.html",[2,0.777,3,0.777,7,0.476,20,0.351,30,0.805,36,0.085,52,1.587,60,0.707,61,0.616,68,0.753,69,0.239,109,0.964,116,1.438,119,0.058,120,0.058,121,0.707,123,0.964,124,2.185,125,1.47,126,1.766,131,1.377,132,1.948,133,1.47,134,1.47,139,1.948,156,0.964,241,1.847,290,1.847,291,1.847,292,1.847,293,1.847,294,1.847,295,2.419,296,3.206,297,2.419,298,1.847,299,1.847,300,2.419,301,1.847,302,2.419]],["title/injectables/CodemirrorService.html",[30,0.445,183,0.901]],["body/injectables/CodemirrorService.html",[2,0.764,3,0.764,7,0.468,17,0.764,18,1.927,19,1.752,20,0.575,23,1.169,30,0.624,33,1.169,36,0.084,37,1.446,38,0.948,48,1.169,60,0.748,61,0.606,68,0.468,69,0.235,80,1.169,83,2.903,84,2.625,102,1.558,119,0.058,120,0.058,156,1.263,158,1.816,183,1.42,184,2.903,190,2.421,239,3.11,240,1.816,242,1.169,243,1.446,244,1.446,245,1.446,246,1.446,247,1.446,248,1.169,249,1.169,250,1.816,251,1.816,252,1.816,253,1.816,254,1.927,255,1.446,256,2.167,257,1.446,258,1.446,303,1.446,304,3.17,305,3.17,306,3.17,307,2.421,308,3.17,309,2.421,310,2.379,311,3.17,312,3.17,313,3.17,314,3.17,315,3.17,316,3.17]],["title/coverage.html",[317,1.862]],["body/coverage.html",[0,0.905,1,0.911,7,0.558,8,2.166,20,0.516,30,0.558,36,0.082,38,1.13,69,0.281,88,3.26,102,1.394,103,1.724,116,0.911,119,0.065,120,0.065,146,1.724,147,2.166,156,1.619,157,2.159,183,1.13,303,2.159,317,1.724,318,2.837,319,2.837,320,2.837,321,2.837,322,2.166,323,2.595,324,2.712,325,4.065,326,2.166,327,4.065,328,2.837,329,3.553,330,2.837,331,2.712,332,2.166,333,2.166,334,2.837,335,2.166]],["title/dependencies.html",[123,1.081,336,1.451]],["body/dependencies.html",[20,0.5,36,0.08,61,0.877,119,0.072,120,0.072,123,1.371,337,3.441,338,3.991,339,3.441,340,3.441]],["title/index.html",[17,0.61,341,1.9,342,1.9]],["body/index.html",[0,0.63,4,1.016,7,0.487,12,1.016,13,1.016,19,1.215,20,0.619,21,1.016,26,1.277,28,1.016,30,0.487,36,0.082,39,1.016,40,1.016,47,0.822,55,1.016,60,0.715,61,0.426,65,1.277,68,0.487,69,0.291,70,1.016,78,1.277,80,0.822,99,1.277,103,1.789,119,0.045,120,0.045,121,0.329,122,0.666,131,0.945,139,1.016,177,1.277,185,1.277,242,0.822,248,0.822,249,0.822,269,1.889,298,2.484,299,1.277,301,1.277,307,2.248,309,1.277,317,1.016,335,1.277,336,2.248,343,3.944,344,1.672,345,1.672,346,1.672,347,2.474,348,1.672,349,1.672,350,1.672,351,2.474,352,1.277,353,1.672,354,3.862,355,1.672,356,1.672,357,1.672,358,1.672,359,1.672,360,1.672,361,1.889,362,3.762,363,3.254,364,2.474,365,2.474,366,3.635,367,2.474,368,2.474,369,3.472,370,1.672,371,3.472,372,2.474,373,2.474,374,3.254,375,2.474,376,3.472,377,2.474,378,2.474,379,2.474,380,2.944,381,2.944,382,2.474,383,2.474,384,1.672,385,3.862,386,2.944,387,2.474,388,1.672,389,3.944,390,2.944,391,1.672,392,1.672,393,1.672,394,2.944,395,1.672,396,1.672,397,1.672,398,1.672,399,1.672,400,2.474,401,2.474,402,1.672,403,1.672,404,1.672,405,1.672,406,1.672,407,1.672,408,1.672,409,1.672,410,1.672,411,1.672,412,1.672,413,1.672,414,1.672,415,1.672,416,1.672,417,1.672,418,1.672,419,1.672,420,1.672,421,1.672,422,1.672,423,1.672,424,1.672,425,1.672,426,1.672,427,1.672,428,1.672,429,1.672,430,2.944,431,2.944,432,1.672,433,1.672,434,1.672,435,1.672,436,1.672,437,1.672,438,1.672,439,1.672,440,1.672,441,1.672,442,1.672,443,1.672,444,2.474,445,2.474,446,1.672,447,1.672,448,1.672,449,1.672,450,1.672,451,1.672,452,1.672,453,1.672,454,1.672,455,1.672,456,1.672]],["title/modules.html",[121,0.603]],["body/modules.html",[36,0.072,119,0.072,120,0.072,121,0.677,122,1.371,131,1.105,138,2.425,352,3.047,457,3.991,458,3.991]],["title/overview.html",[459,2.34]],["body/overview.html",[0,0.656,1,1.361,30,0.729,36,0.085,52,1.619,55,2.029,68,0.507,69,0.255,109,1.026,116,1.394,119,0.061,120,0.061,121,0.657,122,1.689,123,1.026,124,1.564,125,1.564,126,1.265,127,1.966,128,1.966,129,1.966,130,1.966,131,1.379,132,2.029,133,1.564,134,1.564,183,1.026,290,1.966,291,1.966,292,1.966,293,1.966,294,1.966,361,2.55,459,1.966]],["title/miscellaneous/variables.html",[323,1.65,460,1.451]],["body/miscellaneous/variables.html",[17,0.804,20,0.62,23,1.979,36,0.083,38,1.604,47,1.906,48,1.979,52,1.306,60,0.645,119,0.06,120,0.06,156,1.306,157,1.521,242,1.611,243,1.993,244,1.993,245,1.993,246,1.993,247,1.993,248,1.611,249,1.611,254,2.358,255,1.993,256,2.511,257,1.993,258,1.993,303,1.521,322,1.912,323,1.521,324,3.155,326,1.912,331,1.912,332,2.792,333,2.792,460,1.912,461,2.504,462,2.504,463,3.279,464,2.504,465,2.504,466,2.504,467,2.504,468,3.279,469,2.504]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["0.5rem",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":361,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.x",{"_index":356,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"overview.html":{}}}],["2/2",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["2677d0",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":365,"title":{},"body":{"index.html":{}}}],["4",{"_index":367,"title":{},"body":{"index.html":{}}}],["5",{"_index":351,"title":{},"body":{"index.html":{}}}],["5.38.0",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["5.x",{"_index":299,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["6",{"_index":347,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":370,"title":{},"body":{"index.html":{}}}],["7.1",{"_index":372,"title":{},"body":{"index.html":{}}}],["7.2",{"_index":373,"title":{},"body":{"index.html":{}}}],["7.3",{"_index":375,"title":{},"body":{"index.html":{}}}],["7.4",{"_index":377,"title":{},"body":{"index.html":{}}}],["7.5",{"_index":379,"title":{},"body":{"index.html":{}}}],["8",{"_index":382,"title":{},"body":{"index.html":{}}}],["_",{"_index":208,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_codemirror",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["_http",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["_instanc",{"_index":162,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_valu",{"_index":163,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["_zone",{"_index":180,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["a1c549",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["accessor",{"_index":232,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["actual_compon",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["add",{"_index":390,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":160,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["alreadi",{"_index":421,"title":{},"body":{"index.html":{}}}],["angular",{"_index":298,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["angular/common",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/CodemirrorComponent.html":{}}}],["angular/http",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/platform",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["anyth",{"_index":445,"title":{},"body":{"index.html":{}}}],["aot",{"_index":380,"title":{},"body":{"index.html":{}}}],["api",{"_index":398,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["app.compon",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":344,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":122,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":146,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["attach",{"_index":231,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["background",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":432,"title":{},"body":{"index.html":{}}}],["befor",{"_index":415,"title":{},"body":{"index.html":{}}}],["blur",{"_index":176,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["bootstrap",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["break",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["brows",{"_index":458,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"modules.html":{}}}],["browser.get",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":368,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":409,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":450,"title":{},"body":{"index.html":{}}}],["case",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["cgot",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["chang",{"_index":177,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["ci",{"_index":420,"title":{},"body":{"index.html":{}}}],["class",{"_index":69,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cli",{"_index":443,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_codemirrormodul",{"_index":290,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_codemirrorcomponent_provid",{"_index":292,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_declar",{"_index":291,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_export",{"_index":293,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["cluster_codemirrormodule_provid",{"_index":294,"title":{},"body":{"modules/CodemirrorModule.html":{},"overview.html":{}}}],["code",{"_index":307,"title":{},"body":{"injectables/CodemirrorService.html":{},"index.html":{}}}],["codemirror",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["codemirror.compon",{"_index":297,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["codemirror.editor",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodemirrorService.html":{}}}],["codemirror.fromtextarea(this.host.nativeel",{"_index":280,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror.servic",{"_index":241,"title":{},"body":{"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{}}}],["codemirror.umd.j",{"_index":442,"title":{},"body":{"index.html":{}}}],["codemirror/bundles/@nomadreservations/ngx",{"_index":441,"title":{},"body":{"index.html":{}}}],["codemirror/codemirror.component.t",{"_index":157,"title":{},"body":{"components/CodemirrorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codemirror/codemirror.component.ts:102",{"_index":200,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:110",{"_index":219,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:119",{"_index":223,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:127",{"_index":206,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:129",{"_index":209,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:131",{"_index":212,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:133",{"_index":216,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:138",{"_index":199,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:53",{"_index":187,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:55",{"_index":195,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:57",{"_index":197,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:59",{"_index":194,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:61",{"_index":196,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:63",{"_index":230,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:66",{"_index":225,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:69",{"_index":182,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:82",{"_index":234,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:85",{"_index":189,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.component.ts:95",{"_index":203,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirror/codemirror.module.t",{"_index":295,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["codemirror/codemirror.service.t",{"_index":303,"title":{},"body":{"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["codemirror/codemirror.service.ts:27",{"_index":310,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["codemirror/lib/codemirror.css",{"_index":435,"title":{},"body":{"index.html":{}}}],["codemirror/mode/gfm/gfm",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["codemirrorcompon",{"_index":116,"title":{"components/CodemirrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"coverage.html":{},"overview.html":{}}}],["codemirrorinit",{"_index":165,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirrorinit(config",{"_index":198,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["codemirrormodul",{"_index":131,"title":{"modules/CodemirrorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["codemirrorservic",{"_index":30,"title":{"injectables/CodemirrorService.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["color",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":401,"title":{},"body":{"index.html":{}}}],["compat",{"_index":455,"title":{},"body":{"index.html":{}}}],["compil",{"_index":381,"title":{},"body":{"index.html":{}}}],["compliant",{"_index":346,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":426,"title":{},"body":{"index.html":{}}}],["compodoc7",{"_index":428,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["config",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["configur",{"_index":376,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`%c",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(editor.getdoc",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(editor.st",{"_index":436,"title":{},"body":{"index.html":{}}}],["console.log(this.valu",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":253,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["constructor(_codemirror",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["content",{"_index":360,"title":{},"body":{"index.html":{}}}],["context",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":224,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.registeronchang",{"_index":213,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.registerontouch",{"_index":217,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["controlvalueaccessor.valu",{"_index":188,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["coverag",{"_index":317,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["css",{"_index":433,"title":{},"body":{"index.html":{}}}],["current",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["cursoract",{"_index":178,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["declar",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["decor",{"_index":228,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["depend",{"_index":123,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deriv",{"_index":358,"title":{},"body":{"index.html":{}}}],["descript",{"_index":158,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["destroy",{"_index":204,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["detail",{"_index":186,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["details](http://codemirror.net/doc/manual.html#config",{"_index":265,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["determin",{"_index":246,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":391,"title":{},"body":{"index.html":{}}}],["dev2",{"_index":392,"title":{},"body":{"index.html":{}}}],["devor",{"_index":388,"title":{},"body":{"index.html":{}}}],["direct",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["dirty/touch",{"_index":210,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["docs:watch",{"_index":427,"title":{},"body":{"index.html":{}}}],["document",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["e2e/src/app.po.t",{"_index":147,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["editor",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{}}}],["editor.getdoc().getmode().nam",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["element(by.css('app",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":227,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["emit",{"_index":312,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["entri",{"_index":396,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":296,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["environ",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":190,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["eventemitt",{"_index":193,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["exist",{"_index":245,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"overview.html":{}}}],["fals",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":416,"title":{},"body":{"index.html":{}}}],["fn",{"_index":214,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["focu",{"_index":179,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["folder",{"_index":394,"title":{},"body":{"index.html":{}}}],["follow",{"_index":400,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":261,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["forwardref",{"_index":237,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["gener",{"_index":425,"title":{},"body":{"index.html":{}}}],["get",{"_index":341,"title":{"index.html":{}},"body":{}}],["getparagraphtext",{"_index":148,"title":{},"body":{"classes/AppPage.html":{}}}],["getvalu",{"_index":233,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["gfm",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["global",{"_index":452,"title":{},"body":{"index.html":{}}}],["h1')).gettext",{"_index":155,"title":{},"body":{"classes/AppPage.html":{}}}],["hold",{"_index":304,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["host",{"_index":164,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["http",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["http://codemirror.net/doc/manual.html#config",{"_index":437,"title":{},"body":{"index.html":{}}}],["httpmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["identifi",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":431,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":451,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{}}}],["init",{"_index":202,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["initi",{"_index":184,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["inject",{"_index":183,"title":{"injectables/CodemirrorService.html":{}},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":174,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["insanti",{"_index":316,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["instal",{"_index":362,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["integr",{"_index":404,"title":{},"body":{"index.html":{}}}],["istanbul",{"_index":408,"title":{},"body":{"index.html":{}}}],["it'",{"_index":315,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["javascript",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["js",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["languag",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["languagechang",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["languagechange(languag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["lib/ngx",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["lib6",{"_index":424,"title":{},"body":{"index.html":{}}}],["librari",{"_index":371,"title":{},"body":{"index.html":{}}}],["libthen",{"_index":412,"title":{},"body":{"index.html":{}}}],["licens",{"_index":383,"title":{},"body":{"index.html":{}}}],["line:compon",{"_index":259,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["line:no",{"_index":260,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["line:vari",{"_index":252,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["linenumb",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["linewrap",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["load",{"_index":378,"title":{},"body":{"index.html":{}}}],["local",{"_index":410,"title":{},"body":{"index.html":{}}}],["locat",{"_index":434,"title":{},"body":{"index.html":{}}}],["look",{"_index":350,"title":{},"body":{"index.html":{}}}],["main",{"_index":242,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["map((r",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["markdown",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["match",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["method",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["mirror",{"_index":308,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["miscellan",{"_index":460,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":456,"title":{},"body":{"index.html":{}}}],["mode",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["modul",{"_index":121,"title":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":264,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["namespac",{"_index":454,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":149,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":430,"title":{},"body":{"index.html":{}}}],["new",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{}}}],["next",{"_index":251,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["ng2",{"_index":359,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":238,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngafterviewinit",{"_index":166,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":167,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngx",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["ngzone",{"_index":181,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["node_modules/@nomadreservations/ngx",{"_index":440,"title":{},"body":{"index.html":{}}}],["nomadreservations.ngxcodemirror",{"_index":453,"title":{},"body":{"index.html":{}}}],["nomadreservations/ngx",{"_index":343,"title":{},"body":{"index.html":{}}}],["note",{"_index":348,"title":{},"body":{"index.html":{}}}],["npm",{"_index":385,"title":{},"body":{"index.html":{}}}],["object",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onblur",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["onc",{"_index":314,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["onchang",{"_index":168,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["onchange(_",{"_index":205,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["ondestroy",{"_index":161,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["ontouch",{"_index":169,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["option",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["origin",{"_index":357,"title":{},"body":{"index.html":{}}}],["out",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["output",{"_index":175,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["overview",{"_index":459,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":411,"title":{},"body":{"index.html":{}}}],["packag",{"_index":336,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":399,"title":{},"body":{"index.html":{}}}],["pad",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":267,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["paramet",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["pass",{"_index":191,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["path]@nomadreservations/ngx",{"_index":413,"title":{},"body":{"index.html":{}}}],["peer",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["plain",{"_index":448,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":353,"title":{},"body":{"index.html":{}}}],["point",{"_index":397,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":306,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["privat",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["process",{"_index":221,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["product",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":363,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["protractor",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["public",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{}}}],["publish",{"_index":369,"title":{},"body":{"index.html":{}}}],["readi",{"_index":301,"title":{},"body":{"modules/CodemirrorModule.html":{},"index.html":{}}}],["readm",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["ref",{"_index":262,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["referenc",{"_index":305,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["refrenc",{"_index":313,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["regist",{"_index":418,"title":{},"body":{"index.html":{}}}],["registeronchang",{"_index":170,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registeronchange(fn",{"_index":211,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registerontouch",{"_index":171,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registerontouched(fn",{"_index":215,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["registri",{"_index":423,"title":{},"body":{"index.html":{}}}],["rendering(ssr",{"_index":345,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":239,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["report",{"_index":407,"title":{},"body":{"index.html":{}}}],["requir",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('codemirror",{"_index":258,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.text",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}],["respons",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{}}}],["rollup",{"_index":446,"title":{},"body":{"index.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'nam",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["run",{"_index":402,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":240,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["rxjs/oper",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["sampl",{"_index":374,"title":{},"body":{"index.html":{}}}],["save",{"_index":386,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":429,"title":{},"body":{"index.html":{}}}],["see",{"_index":185,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["server",{"_index":248,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":269,"title":{},"body":{"components/CodemirrorComponent.html":{},"index.html":{}}}],["setvalue(v",{"_index":235,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["side",{"_index":249,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{}}}],["spec.bundle.j",{"_index":405,"title":{},"body":{"index.html":{}}}],["spec\\.t",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":393,"title":{},"body":{"index.html":{}}}],["src/.../codemirror.component.t",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../codemirror.service.t",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.t",{"_index":322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/ngx",{"_index":156,"title":{},"body":{"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/public_api.t",{"_index":395,"title":{},"body":{"index.html":{}}}],["src/test.t",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":300,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["start",{"_index":342,"title":{"index.html":{}},"body":{}}],["statement",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["storag",{"_index":226,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["string",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["structur",{"_index":364,"title":{},"body":{"index.html":{}}}],["subject",{"_index":311,"title":{},"body":{"injectables/CodemirrorService.html":{}}}],["subscribe((readm",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":352,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":457,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["system.config",{"_index":439,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":438,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":335,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tabsiz",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":366,"title":{},"body":{"index.html":{}}}],["testit",{"_index":406,"title":{},"body":{"index.html":{}}}],["this._codemirror.instance$.next(this._inst",{"_index":289,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._codemirror.instance$.subscribe((editor",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this._http.get('/assets/readme.md",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["this._inst",{"_index":276,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('blur",{"_index":287,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('chang",{"_index":281,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('cursoract",{"_index":285,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.on('focu",{"_index":283,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._instance.setvalue(this._valu",{"_index":277,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._valu",{"_index":268,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this._zone.runoutsideangular",{"_index":279,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.blur.emit({inst",{"_index":288,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.change.emit(valu",{"_index":275,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.codemirror",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.codemirror.setoption('mod",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["this.codemirrorinit(this.config",{"_index":273,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.config",{"_index":272,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.cursoractivity.emit({inst",{"_index":286,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.focus.emit({inst",{"_index":284,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.onchang",{"_index":278,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.onchange(v",{"_index":271,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.ontouch",{"_index":274,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.updatevalue(this._instance.getvalu",{"_index":282,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["this.valu",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["through",{"_index":192,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["time",{"_index":417,"title":{},"body":{"index.html":{}}}],["travi",{"_index":419,"title":{},"body":{"index.html":{}}}],["travis.yml",{"_index":422,"title":{},"body":{"index.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["trigger",{"_index":207,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"modules/CodemirrorModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":250,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":254,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["types/codemirror",{"_index":387,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["umd",{"_index":449,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":256,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":403,"title":{},"body":{"index.html":{}}}],["up",{"_index":444,"title":{},"body":{"index.html":{}}}],["updat",{"_index":220,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["updatevalu",{"_index":172,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["updatevalue(valu",{"_index":218,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["us",{"_index":354,"title":{},"body":{"index.html":{}}}],["usag",{"_index":159,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["useexist",{"_index":263,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["user",{"_index":309,"title":{},"body":{"injectables/CodemirrorService.html":{},"index.html":{}}}],["util",{"_index":243,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":236,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["valu",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":270,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["variabl",{"_index":323,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":355,"title":{},"body":{"index.html":{}}}],["version].tgz5",{"_index":414,"title":{},"body":{"index.html":{}}}],["via",{"_index":384,"title":{},"body":{"index.html":{}}}],["view",{"_index":201,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["viewchild",{"_index":229,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["viewchild('host",{"_index":266,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CodemirrorComponent.html":{}}}],["we'r",{"_index":247,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["webpack",{"_index":447,"title":{},"body":{"index.html":{}}}],["window",{"_index":255,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["window'",{"_index":244,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["window.navig",{"_index":257,"title":{},"body":{"components/CodemirrorComponent.html":{},"injectables/CodemirrorService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":302,"title":{},"body":{"modules/CodemirrorModule.html":{}}}],["writevalu",{"_index":173,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["writevalue(valu",{"_index":222,"title":{},"body":{"components/CodemirrorComponent.html":{}}}],["yarn",{"_index":389,"title":{},"body":{"index.html":{}}}],["you'r",{"_index":349,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/CodemirrorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codemirror\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                languageChange\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onBlur\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_codeMirror: CodemirrorService, _http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _codeMirror\n                                                  \n                                                        \n                                                                    CodemirrorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            languageChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChange(language: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        language\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codemirror\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codemirror:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    mode: {\n      name: 'gfm'\n    },\n    lineNumbers: true,\n    lineWrapping: true,\n    tabSize: 2\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        language:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'gfm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { CodemirrorService } from '../lib/ngx-codemirror';\n\nimport { map } from 'rxjs/operators';\nimport 'codemirror/mode/gfm/gfm';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  public config = {\n    mode: {\n      name: 'gfm'\n    },\n    lineNumbers: true,\n    lineWrapping: true,\n    tabSize: 2\n  };\n  public value: any;\n  public language = 'gfm';\n  public codemirror;\n\n  constructor(\n    private _codeMirror: CodemirrorService,\n    private _http: Http\n  ) { }\n\n  public ngOnInit() {\n    this._http.get('/assets/README.md')\n      .pipe(\n        map((res: Response) => res.text())\n      )\n      .subscribe((readme) => {\n        this.value = readme;\n      });\n\n    this._codeMirror.instance$.subscribe((editor) => {\n      this.codemirror = editor;\n      console.log(\n        `%cGot CodeMirror.Editor instance, the current mode is ${editor.getDoc().getMode().name}`,\n        'padding: 0 0.5rem; background: #000; color: #a1c549'\n      );\n      console.log(editor.getDoc());\n    });\n  }\n\n  public languageChange(language) {\n    if (this.codemirror) {\n      switch (language) {\n        case 'js':\n          this.codemirror.setOption('mode', {name: 'javascript'});\n          break;\n        case 'gfm':\n        default:\n          this.codemirror.setOption('mode', {name: 'gfm'});\n      }\n    }\n\n  }\n\n  public onBlur() {\n    console.log(`%c--------------------- New Document Value --------------------`, 'background-color: #2677d0; color: #fff');\n    console.log(this.value);\n    console.log(`%c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$`, 'background-color: #2677d0; color: #fff');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Markdown\n        Javascript\n        Typescript\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Markdown        Javascript        Typescript                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CodemirrorComponent', 'selector': 'ngx-codemirror'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nAppModule -->\n\nCodemirrorModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CodemirrorModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CodemirrorModule } from '../lib/ngx-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    FormsModule,\n    CodemirrorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodemirrorComponent.html":{"url":"components/CodemirrorComponent.html","title":"component - CodemirrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodemirrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-codemirror/codemirror.component.ts\n\n\n    \n        Description\n    \n    \n        CodeMirror component\nUsage :\n   \n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ngx-codemirror\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _instance\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Public\n                                host\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                codemirrorInit\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                updateValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                cursorActivity\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_codeMirror: CodemirrorService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-codemirror/codemirror.component.ts:69\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _codeMirror\n                                                  \n                                                        \n                                                                    CodemirrorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                NgZone injected for Initialization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Codemirror config object (see details) \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Implements ControlValueAccessor.value \n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:85\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                    \n                        blur output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        change output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cursorActivity\n                    \n                    \n                        cursorActivity output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                    \n                        focus output event, pass through from codemirror \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:57\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            codemirrorInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codemirrorInit(config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Initialize codemirror\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            On component view init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            On component destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChange(_: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Change event trigger \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Dirty/touched event trigger \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor.registerOnChange \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor.registerOnTouched \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Value update process\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:119\n                            \n                        \n\n\n                \n                    \n                            Implements ControlValueAccessor\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:66\n                            \n                        \n\n                \n                    \n                        Current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:69\n                            \n                        \n\n                \n                    \n                        Value storage \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:63\n                            \n                        \n\n                \n                    \n                        Host element for codemirror to attach to \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:82\n                                \n                            \n                    \n                        \n                                Implements ControlValueAccessor.value \n\n\n                        \n                    \n\n                \n                    \n                        setvalue(v: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/ngx-codemirror/codemirror.component.ts:85\n                                \n                            \n                    \n                        \n                                Implements ControlValueAccessor.value \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  forwardRef,\n  AfterViewInit,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\n\nimport { Editor } from 'codemirror';\nimport { CodemirrorService } from './codemirror.service';\n\n/**\n * Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n */\n// tslint:disable-next-line:variable-name\nconst CodeMirror: any =\n  typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined;\n\n/**\n * CodeMirror component\n *\n * **Usage** :\n * ```html\n *   \n * ```\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-codemirror',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true\n    }\n  ],\n  template: '',\n})\nexport class CodemirrorComponent implements AfterViewInit, OnDestroy {\n\n  /** Codemirror config object (see [details](http://codemirror.net/doc/manual.html#config)) */\n  @Input() public config: any;\n  /** change output event, pass through from codemirror */\n  @Output() public change = new EventEmitter();\n  /** focus output event, pass through from codemirror */\n  @Output() public focus = new EventEmitter();\n  /** blur output event, pass through from codemirror */\n  @Output() public blur = new EventEmitter();\n  /** cursorActivity output event, pass through from codemirror */\n  @Output() public cursorActivity = new EventEmitter();\n  /** Host element for codemirror to attach to */\n  @ViewChild('host') public host: ElementRef;\n\n  /** Current editor instance */\n  private _instance: any;\n\n  /** Value storage */\n  private _value = '';\n\n  /**\n   * Constructor\n   *\n   * @param _zone NgZone injected for Initialization\n   */\n  constructor(\n    private _codeMirror: CodemirrorService,\n    private _zone: NgZone\n  ) {}\n\n  /** Implements ControlValueAccessor.value */\n  get value() { return this._value; }\n\n  /** Implements ControlValueAccessor.value */\n  @Input() set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  /**\n   * On component destroy\n   */\n  public ngOnDestroy() {\n\n  }\n\n  /**\n   * On component view init\n   */\n  public ngAfterViewInit() {\n    this.config = this.config || {};\n    this.codemirrorInit(this.config);\n  }\n\n  /**\n   * Value update process\n   */\n  public updateValue(value: any) {\n    this.value = value;\n    this.onTouched();\n    this.change.emit(value);\n  }\n\n  /**\n   * Implements ControlValueAccessor\n   */\n  public writeValue(value: any) {\n    this._value = value || '';\n    if (this._instance) {\n      this._instance.setValue(this._value);\n    }\n  }\n\n  /** Change event trigger */\n  public  onChange(_: any) {}\n  /** Dirty/touched event trigger */\n  public onTouched() {}\n  /** Implements ControlValueAccessor.registerOnChange */\n  public registerOnChange(fn: any) { this.onChange = fn; }\n  /** Implements ControlValueAccessor.registerOnTouched */\n  public registerOnTouched(fn: any) { this.onTouched = fn; }\n\n  /**\n   * Initialize codemirror\n   */\n  private codemirrorInit(config: any) {\n    if (CodeMirror) {\n      this._zone.runOutsideAngular(() => {\n        this._instance = CodeMirror.fromTextArea(this.host.nativeElement, config);\n        this._instance.setValue(this._value);\n      });\n\n      this._instance.on('change', () => {\n        this.updateValue(this._instance.getValue());\n      });\n\n      this._instance.on('focus', (instance: any, event: any) => {\n        this.focus.emit({instance, event});\n      });\n\n      this._instance.on('cursorActivity', (instance: any) => {\n        this.cursorActivity.emit({instance});\n      });\n\n      this._instance.on('blur', (instance: any, event: any) => {\n        this.blur.emit({instance, event});\n      });\n\n      this._codeMirror.instance$.next(this._instance);\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CodemirrorComponent', 'selector': 'ngx-codemirror'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodemirrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CodemirrorModule.html":{"url":"modules/CodemirrorModule.html","title":"module - CodemirrorModule","body":"\n                   \n\n\n\n\n  Modules\n  CodemirrorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CodemirrorModule\n\n\n\ncluster_CodemirrorModule_declarations\n\n\n\ncluster_CodemirrorModule_CodemirrorComponent_providers\n\n\n\ncluster_CodemirrorModule_exports\n\n\n\ncluster_CodemirrorModule_providers\n\n\n\n\nCodemirrorComponent\n\nCodemirrorComponent\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nCodemirrorModule -->\n\nCodemirrorComponent->CodemirrorModule\n\n\n\n\n\nCodemirrorComponent \n\nCodemirrorComponent \n\nCodemirrorComponent  -->\n\nCodemirrorModule->CodemirrorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->CodemirrorComponent -->\n\n{\n    : , : (() => ), : true\n}->CodemirrorComponent\n\n\n\n\n\nCodemirrorService\n\nCodemirrorService\n\nCodemirrorModule -->\n\nCodemirrorService->CodemirrorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-codemirror/codemirror.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodemirrorComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CodemirrorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CodemirrorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CodemirrorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { CodemirrorComponent } from './codemirror.component';\nimport { CodemirrorService } from './codemirror.service';\n\n/**\n * @angular 5.x+ SSR ready CodeMirror wrapping module.\n */\n@NgModule({\n  providers: [\n    CodemirrorService\n  ],\n  declarations: [CodemirrorComponent],\n  exports: [CodemirrorComponent],\n  entryComponents: [CodemirrorComponent]\n})\nexport class CodemirrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodemirrorService.html":{"url":"injectables/CodemirrorService.html","title":"injectable - CodemirrorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CodemirrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-codemirror/codemirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Initialize Event for CodeMirror.Editor instance\nHolds a referencable pointer to the code mirror instance for users.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                instance$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            instance$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance$:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-codemirror/codemirror.service.ts:27\n                            \n                        \n\n                \n                    \n                        Codemirror instance subject\nEmits a refrence to the initialized CodeMirror.Editor once it's insantiated.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Editor } from 'codemirror';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n */\n// tslint:disable-next-line:variable-name\nconst CodeMirror: any =\n  typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined;\n\n/**\n * Initialize Event for CodeMirror.Editor instance\n *\n * Holds a referencable pointer to the code mirror instance for users.\n */\n@Injectable()\nexport class CodemirrorService {\n  /**\n   * Codemirror instance subject\n   *\n   * Emits a refrence to the initialized CodeMirror.Editor once it's insantiated.\n   */\n  public instance$: ReplaySubject = new ReplaySubject();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.component.ts\n            \n            \n                component\n            \n            \n                CodemirrorComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.component.ts\n            \n            \n                variable\n            \n            \n                CodeMirror\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.service.ts\n            \n            \n                injectable\n            \n            \n                CodemirrorService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/ngx-codemirror/codemirror.service.ts\n            \n            \n                variable\n            \n            \n                CodeMirror\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0\n        \n            @angular/common : >=6.0.0\n        \n            codemirror : >=5.38.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nomadreservations/ngx-codemirror\n@nomadreservations/ngx-codemirror CodeMirror (5.x) code editor in your Angular application. Server Side Rendering(SSR) compliant and @angular 6+ Ready.\nNote: If you're looking for @angular 5 support please use version 1.0.x\nOriginally derived from ng2-codemirror\nTable of Contents:\n\n\n\n1. Installation\n2. Project structure\n3. Testing\n4. Building\n5. Publishing\n6. Documentation\n7. Using the library\n7.1. Installing\n7.2. Sample\n7.3. Configuration\n7.4. Loading\n7.5. AoT compilation\n\n\n8. License\n\n\n1. Installation\nTo use @nomadreservations/ngx-codemirror in your project install it via npm:\nnpm i @nomadreservations/ngx-codemirror codemirror --save\nnpm i @types/codemirror --save-devor\nyarn add @nomadreservations/ngx-codemirror codemirror\nyarn add --dev @types/codemirror --save-dev2. Project structure\n\nLibrary:\nsrc folder for the classes\nsrc/lib/public_api.ts entry point for all public APIs of the package\npackage.json npm options\n\n\n\n3. Testing\nThe following command run unit & integration tests that are in the tests folder (you can change the folder in spec.bundle.js file):\nyarn testIt also reports coverage using Istanbul.\n4. Building\nThe following command:\nyarn buildTo test locally the npm package:\nyarn pack-libThen you can install it in an app to test it:\nyarn add [path]@nomadreservations/ngx-codemirror-[version].tgz5. Publishing\nBefore publishing the first time:\n\nyou can register your library on Travis CI: you have already configured .travis.yml file\nyou must have a user on the npm registry: Publishing npm packages\n\nyarn publish-lib6. Documentation\nTo generate the documentation, this project uses compodoc:\nyarn docs:watch\nyarn compodoc7. Using the library\n7.1. Installing\nnpm install @nomadreservations/ngx-codemirror --saveThen you need to include base CSS of codemirror located in codemirror/lib/codemirror.css\n7.2. Sample\nInclude CodemirrorModule in your main module :\nimport { CodemirrorModule } from '@nomadreservations/ngx-codemirror';\n\n@NgModule({\n  // ...\n  imports:      [\n    CodemirrorModule\n  ],\n  // ...\n})\nexport class AppModule { }import { Component } from '@angular/core';\nimport { CodemirrorService } from '@nomadreservations/ngx-codemirror';\n\n@Component({\n  selector: 'sample',\n  template: `\n    \n    \n  `\n})\nexport class Sample{\n\n  constructor(\n    private _codeMirror: CodemirrorService,\n  ) { }\n\n  public ngOnInit() {\n    this._codeMirror.instance$.subscribe((editor) => {\n      console.log(editor.state);\n    });\n  }\n}7.3. Configuration\n\nconfig : The configuration object for CodeMirror see http://codemirror.net/doc/manual.html#config\n\n7.4. Loading\nUsing SystemJS configuration\nSystem.config({\n    map: {\n        '@nomadreservations/ngx-codemirror': 'node_modules/@nomadreservations/ngx-codemirror/bundles/@nomadreservations/ngx-codemirror.umd.js'\n    }\n});Angular-CLI\nNo need to set up anything, just import it in your code.\nRollup or webpack\nNo need to set up anything, just import it in your code.\nPlain JavaScript\nInclude the umd bundle in your index.html:\nand use global nomadreservations.ngxCodemirror namespace.\n7.5. AoT compilation\nThe library is compatible with AoT compilation.\n8. License\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CodemirrorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CodemirrorModule\n\n\n\ncluster_CodemirrorModule_declarations\n\n\n\ncluster_CodemirrorModule_CodemirrorComponent_providers\n\n\n\ncluster_CodemirrorModule_exports\n\n\n\ncluster_CodemirrorModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCodemirrorModule\n\nCodemirrorModule\n\nAppModule -->\n\nCodemirrorModule->AppModule\n\n\n\n\n\nCodemirrorComponent \n\nCodemirrorComponent \n\nCodemirrorComponent  -->\n\nCodemirrorModule->CodemirrorComponent \n\n\n\n\n\nCodemirrorComponent\n\nCodemirrorComponent\n\nCodemirrorModule -->\n\nCodemirrorComponent->CodemirrorModule\n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->CodemirrorComponent -->\n\n{\n    : , : (() => ), : true\n}->CodemirrorComponent\n\n\n\n\n\nCodemirrorService\n\nCodemirrorService\n\nCodemirrorModule -->\n\nCodemirrorService->CodemirrorModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodeMirror   (src/.../codemirror.component.ts)\n                        \n                        \n                            CodeMirror   (src/.../codemirror.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ngx-codemirror/codemirror.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CodeMirror\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CodeMirror:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined\n                        \n                    \n\n                \n                    \n                        Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n\n                    \n                \n\n            \n        \n\n    src/lib/ngx-codemirror/codemirror.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CodeMirror\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CodeMirror:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : typeof window !== 'undefined' && typeof window.navigator !== 'undefined'\n  ? require('codemirror')\n  : undefined\n                        \n                    \n\n                \n                    \n                        Main Codemirror import, utilizing window's existence to determine if we're server side or not.\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
